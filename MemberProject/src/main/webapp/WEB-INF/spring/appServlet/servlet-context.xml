<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 어떤경로 오던지 간에 /resources/를 알아서 찾아준다 절대경로에서 /를 붙여주면 contextroot를 무시(그전에 
		server에서 기본 path를 /로 변경해줬다) -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 그전에는 webconyent로 묶어서 같이 다녔지만 spring에서는/resources/경로를 주면 Spring이 알아서 
		찾아준다(spring은 설정을 따라간다 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.hk.member" />

	<!-- 파일업로드 알려면 MultipartResolver에 받기로 했기떄문에 bean에 저장해야한다 -->
	<!-- MultipartResolver -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="200000000" />
		<beans:property name="maxInMemorySize"
			value="200000000" />
	</beans:bean>
</beans:beans>
